[
    {
        "question": "What is the error in the following variable declaration?\n\n```js\nvar 1number = 10;\n```",
        "options": [
            "A variable cannot start with a number",
            "let should be used instead of var",
            "A string value must be enclosed in quotes",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "What is wrong with the following code?\n\n```js\nconst name = \"John\";\nname = \"Doe\";\n```",
        "options": [
            "The variable name is undefined",
            "A const variable cannot be reassigned",
            "name should be defined using var",
            "No error"
        ],
        "answer": 1,
        "selected": -1
    },
    {
        "question": "What is the error in the following code?\n\n```js\nlet x = 5;\nlet x = 10;\n```",
        "options": [
            "A let variable cannot be redeclared in the same scope",
            "const should be used instead of let",
            "A new value must be assigned to x",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "What is the issue in the following code?\n\n```js\nconsole.log(y);\nlet y = 20;\n```",
        "options": [
            "The variable y is undefined",
            "Cannot access let before initialization",
            "y should be declared using var",
            "No error"
        ],
        "answer": 1,
        "selected": -1
    },
    {
        "question": "What is the error in the following variable declaration?\n\n```js\nvar my-var = 50;\n```",
        "options": [
            "A variable name cannot contain a hyphen (-)",
            "The variable should be declared using let",
            "const should be used instead of var",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "What is wrong with this code related to data types?\n\n```js\nlet isActive = 'true';\nif (isActive === true) {\n  console.log(\"Active\");\n}\n```",
        "options": [
            "String and boolean types are being compared",
            "The if condition is written incorrectly",
            "isActive should be defined as a number",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "What is the issue with the following code?\n\n```js\nvar undefined = 10;\nconsole.log(undefined);\n```",
        "options": [
            "You cannot use 'undefined' as a variable name",
            "console.log is incorrect",
            "var should be replaced with let",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "Find the error in the following code:\n\n```js\nlet number = 5;\nnumber = \"five\";\nconsole.log(number);\n```",
        "options": [
            "You cannot assign a string to a number variable",
            "Use var instead of let",
            "You must use parseInt() for conversion",
            "No error"
        ],
        "answer": 3,
        "selected": -1
    },
    {
        "question": "What is wrong with this declaration?\n\n```js\nconst obj = {name: 'John'};\nobj = {name: 'Doe'};\n```",
        "options": [
            "You cannot reassign a constant object",
            "The object should be declared using let",
            "You must use Object.freeze()",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    },
    {
        "question": "What is the error in this code?\n\n```js\nvar null = 0;\nconsole.log(null);\n```",
        "options": [
            "You cannot use 'null' as a variable name",
            "console.log is used incorrectly",
            "var should be replaced with let",
            "No error"
        ],
        "answer": 0,
        "selected": -1
    }
]
