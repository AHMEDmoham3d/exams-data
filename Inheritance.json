[
    {
      "question": "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nclass Base {\npublic:\n void show() {\n cout << \"Base\";\n }\n};\nclass Derived : public Base {};\n\nint main() {\n Derived d;\n d.show();\n return 0;\n}\n```",
      "options": ["Base", "Derived", "Compiler Error", "Runtime Error"],
      "answer": 0,
      "selected": -1
    },
    {
      "question": "What is the error in the following C++ code?\n\n```cpp\nclass A {\n  int x;\n};\nclass B : A {\n  int y;\n};\n```",
      "options": [
        "Inheritance should be 'public A'",
        "Missing constructor in class B",
        "Class A should have public members",
        "No error"
      ],
      "answer": 0,
      "selected": -1
    },
    {
      "question": "Find the error in the following C++ code:\n\n```cpp\nclass Base {\n  private:\n    int x;\n};\nclass Derived : public Base {\n  public:\n    void show() { cout << x; }\n};\n```",
      "options": [
        "x is inaccessible in Derived",
        "show() function is not defined",
        "Base class should be public",
        "No error"
      ],
      "answer": 0,
      "selected": -1
    },
    {
      "question": "What is the problem in this C++ code?\n\n```cpp\nclass A {\n  A() {}\n};\nclass B : public A {\n  int y;\n};\n```",
      "options": [
        "Base class constructor is private",
        "y should be initialized",
        "B should override A()",
        "No error"
      ],
      "answer": 0,
      "selected": -1
    },
    {
      "question": "Identify the error in the following C++ code:\n\n```cpp\nclass A {\n  public:\n    virtual void show() = 0;\n};\nclass B : public A {\n  void display() { cout << 'Hello'; }\n};\n```",
      "options": [
        "B must implement 'show()'",
        "display() should be virtual",
        "A cannot have a pure virtual function",
        "No error"
      ],
      "answer": 0,
      "selected": -1
    },
    {
      "question": "Find the error in the following code:\n\n```cpp\nclass A {\n  public:\n    A(int x) {}\n};\nclass B : public A {\n  public:\n    B() {}\n};\n```",
      "options": [
        "B must explicitly call A(int x)",
        "x should be initialized in A",
        "B should be abstract",
        "No error"
      ],
      "answer": 0,
      "selected": -1
    }
  ]
  